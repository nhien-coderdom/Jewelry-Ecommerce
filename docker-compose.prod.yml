version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jewelry-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jewelry-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Strapi Backend
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: jewelry-server-prod
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: false
      HOST: 0.0.0.0
      PORT: 1337
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_KEY: ${CLOUDINARY_KEY}
      CLOUDINARY_SECRET: ${CLOUDINARY_SECRET}
    volumes:
      - strapi_uploads:/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - jewelry-network
    depends_on:
      postgres:
        condition: service_healthy

  # Next.js Frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: jewelry-client-prod
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_REST_API_KEY: ${NEXT_PUBLIC_REST_API_KEY}
      NEXT_PUBLIC_REST_API_URL: ${NEXT_PUBLIC_REST_API_URL}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
      NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${NEXT_PUBLIC_CLERK_SIGN_UP_URL}
      NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: ${NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL}
      NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: ${NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL}
      NEXT_PUBLIC_STRIPE_PUBLISHER_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHER_KEY}
      NEXT_PUBLIC_STRIPE_SECRET_KEY: ${NEXT_PUBLIC_STRIPE_SECRET_KEY}
      RESEND_API_KEY: ${RESEND_API_KEY}
    ports:
      - "3000:3000"
    networks:
      - jewelry-network
    depends_on:
      - server

volumes:
  postgres_data:
  strapi_uploads:

networks:
  jewelry-network:
    driver: bridge
