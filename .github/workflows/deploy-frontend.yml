name: Deploy Frontend to Vercel

on:
  push:
    branches:
      - main
      - feature/phase2
    paths:
      - 'client/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'client/**'

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Build Next.js app
        working-directory: ./client
        env:
          NEXT_PUBLIC_REST_API_URL: https://jewelry-ecommerce-l2ju.onrender.com/api
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISHER_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHER_KEY }}
        run: npm run build

      - name: Lint code (if available)
        working-directory: ./client
        run: npm run lint || echo "Lint complete"
        continue-on-error: true

  deploy-vercel:
    name: Deploy to Vercel
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature/phase2')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        working-directory: ./client
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - name: Build Project Artifacts
        working-directory: ./client
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel build --prod --token=$VERCEL_TOKEN

      - name: Deploy to Vercel
        working-directory: ./client
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

      - name: Deployment Success
        if: success()
        run: |
          echo "✅ Frontend deployed to Vercel successfully!"
          echo "Check: https://vercel.com/${{ secrets.VERCEL_ORG_ID }}/${{ secrets.VERCEL_PROJECT_ID }}"

      - name: Deployment Failed
        if: failure()
        run: |
          echo "❌ Frontend deployment failed!"
          echo "Check logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
